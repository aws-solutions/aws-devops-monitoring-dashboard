// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot test for primary devopsDashboardStack 1`] = `
{
  "Conditions": {
    "AnonymousDataToAWS": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "AnonymousData",
            "SendAnonymousUsageData",
            "Data",
          ],
        },
        "Yes",
      ],
    },
    "GitHubCondition": {
      "Fn::Equals": [
        {
          "Ref": "UseGitHub",
        },
        "Yes",
      ],
    },
    "MultiAccountCondition": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "PrincipalType",
            },
            "None",
          ],
        },
      ],
    },
    "OrganizationCondition": {
      "Fn::Equals": [
        {
          "Ref": "PrincipalType",
        },
        "AWS Organization Id",
      ],
    },
    "QuickSightCondition": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "QuickSightPrincipalArn",
            },
            "",
          ],
        },
      ],
    },
    "TagQueryAnyTagConfigsCond060F5869": {
      "Fn::Not": [
        {
          "Fn::And": [
            {
              "Fn::Equals": [
                {
                  "Ref": "TagsConfigCodeCommit",
                },
                "",
              ],
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "TagsConfigCodeBuild",
                },
                "",
              ],
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "TagsConfigCodePipeline",
                },
                "",
              ],
            },
          ],
        },
      ],
    },
    "WebhookSecretTokenCondition": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "WebhookSecretToken",
            },
            "",
          ],
        },
      ],
    },
  },
  "Description": "(SO0143)DevOps Monitoring Dashboard on AWS  - Main Template (Monitoring Account). Version: v1.0.0",
  "Mappings": {
    "AnonymousData": {
      "SendAnonymousUsageData": {
        "Data": "Yes",
        "MetricsURL": "https://metrics.awssolutionsbuilder.com/generic",
      },
    },
    "UserAgentExtra": {
      "UserAgentExtra": {
        "Key": "AwsSolution/SO0143/v1.0.0",
      },
    },
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Metrics Configuration",
          },
          "Parameters": [
            "DataDuration",
            "CodeCommitRepo",
          ],
        },
        {
          "Label": {
            "default": "S3 Configuration",
          },
          "Parameters": [
            "S3TransitionDays",
          ],
        },
        {
          "Label": {
            "default": "QuickSight Configuration",
          },
          "Parameters": [
            "QuickSightPrincipalArn",
          ],
        },
        {
          "Label": {
            "default": "GitHub Configuration",
          },
          "Parameters": [
            "UseGitHub",
            "WebhookSecretToken",
            "AllowedIPs",
          ],
        },
        {
          "Label": {
            "default": "Multi-Account Configuration",
          },
          "Parameters": [
            "PrincipalType",
            "PrincipalList",
          ],
        },
        {
          "Label": {
            "default": "Tag Configuration",
          },
          "Parameters": [
            "TagsConfigCodeCommit",
            "TagsConfigCodeBuild",
            "TagsConfigCodePipeline",
          ],
        },
      ],
      "ParameterLabels": {
        "AllowedIPs": {
          "default": "Allowed IP Addresses",
        },
        "CodeCommitRepo": {
          "default": "AWS CodeCommit Repository List",
        },
        "DataDuration": {
          "default": "Athena Query Data Duration (Days)",
        },
        "PrincipalList": {
          "default": "List of AWS Accounts or AWS Organization Ids",
        },
        "PrincipalType": {
          "default": "Principal Type",
        },
        "QuickSightPrincipalArn": {
          "default": "Amazon Quicksight Principal ARN",
        },
        "S3TransitionDays": {
          "default": "S3 Transition Days",
        },
        "TagsConfigCodeBuild": {
          "default": "Tag Configuration for filtering on CodeBuild Projects",
        },
        "TagsConfigCodeCommit": {
          "default": "Tag Configuration for filtering on CodeCommit Repositories",
        },
        "TagsConfigCodePipeline": {
          "default": "Tag Configuration for filtering on CodePipeline Pipelines",
        },
        "UseGitHub": {
          "default": "Use GitHub Repository",
        },
        "WebhookSecretToken": {
          "default": "Webhook Secret Token",
        },
      },
    },
  },
  "Outputs": {
    "APIEndpoint": {
      "Condition": "GitHubCondition",
      "Description": "Amazon API Endpoint to receive GitHub events for DevOps Monitoring Dashboard on AWS Solution",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": [
                "GitHubStackNestedStackGitHubStackNestedStackResource3B60958E",
                "Outputs.DevopsDashboardStackGitHubStackGitHubEventsDevOpsDashboardAPI5D10EFA1Ref",
              ],
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Fn::GetAtt": [
                "GitHubStackNestedStackGitHubStackNestedStackResource3B60958E",
                "Outputs.DevopsDashboardStackGitHubStackGitHubEventsDevOpsDashboardAPIDeploymentStageprod49B4208DRef",
              ],
            },
            "/git",
          ],
        ],
      },
    },
    "CodeBuildMetricsGlueTableName": {
      "Description": "Name of CodeBuild metrics Glue table for DevOps Monitoring Dashboard on AWS Solution",
      "Export": {
        "Name": "CodeBuildMetricsGlueTableName",
      },
      "Value": {
        "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0",
      },
    },
    "CustomEventBusArn": {
      "Condition": "MultiAccountCondition",
      "Description": "ARN of custom event bus for DevOps Monitoring Dashboard on AWS Solution",
      "Export": {
        "Name": "CustomEventBusArn",
      },
      "Value": {
        "Fn::GetAtt": [
          "monitoringAcctPermissionDevOpsCustomEventBus1C7F31BE",
          "Arn",
        ],
      },
    },
    "DevOpsMetricsGlueDBName": {
      "Description": "Name of the DevOps metrics Glue database for DevOps Monitoring Dashboard on AWS Solution",
      "Export": {
        "Name": "DevOpsMetricsGlueDBName",
      },
      "Value": {
        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
      },
    },
    "DevOpsMetricsS3Bucket": {
      "Description": "DevOps Metrics S3 Bucket for DevOps Monitoring Dashboard on AWS solution",
      "Export": {
        "Name": "DevOpsMetricsS3Bucket",
      },
      "Value": {
        "Fn::GetAtt": [
          "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
          "Arn",
        ],
      },
    },
    "QSAnalysisURL": {
      "Condition": "QuickSightCondition",
      "Description": "Amazon QuickSight Analysis URL for DevOps Monitoring Dashboard on AWS Solution",
      "Value": {
        "Fn::GetAtt": [
          "QSDashboardNestedStackQSDashboardNestedStackResourceF5171359",
          "Outputs.DevopsDashboardStackQSDashboardQuicksightQuickSightResourcesC8F2EDEFanalysisurl",
        ],
      },
    },
    "QSDashboardURL": {
      "Condition": "QuickSightCondition",
      "Description": "Amazon QuickSight Dashboard URL for DevOps Monitoring Dashboard on AWS Solution",
      "Value": {
        "Fn::GetAtt": [
          "QSDashboardNestedStackQSDashboardNestedStackResourceF5171359",
          "Outputs.DevopsDashboardStackQSDashboardQuicksightQuickSightResourcesC8F2EDEFdashboardurl",
        ],
      },
    },
    "SolutionUUID": {
      "Description": "UUID generated by the DevOps Monitoring Dashboard on AWS Solution",
      "Export": {
        "Name": "SolutionUUID",
      },
      "Value": {
        "Fn::GetAtt": [
          "SolutionHelperCreateUniqueIDAF03406A",
          "UUID",
        ],
      },
    },
    "SolutionVersion": {
      "Description": "Version for DevOps Monitoring Dashboard on AWS solution",
      "Value": "v1.0.0",
    },
  },
  "Parameters": {
    "AllowedIPs": {
      "AllowedPattern": "^(?:((?!0\\d)(1?\\d?\\d|25[0-5]|2[0-4]\\d))\\.){3}((?!0\\d)(1?\\d?\\d|25[0-5]|2[0-4]\\d))(?:\\/([1-9]|[12]\\d|3[0-2]))?(?: *, *(?:((?!0\\d)(1?\\d?\\d|25[0-5]|2[0-4]\\d)){1,3}\\.){3}((?!0\\d)(1?\\d?\\d|25[0-5]|2[0-4]\\d))(?:\\/([1-9]|[12]\\d|3[0-2]))?)*$",
      "Default": "192.30.252.0/22,185.199.108.0/22,140.82.112.0/20,143.55.64.0/20",
      "Description": "Enter a comma-separated list of allowed IPV4 CIDR blocks. By default GitHub IP ranges are used. Note that GitHub changes their IP addresses from time to time so we strongly encourage regular monitoring of their API. If API secret is used, IP address authentication is bypassed. Ignore this field if GitHub is not used.",
      "Type": "String",
    },
    "CodeCommitRepo": {
      "Default": "'ALL'",
      "Description": "List of the names of AWS CodeCommit Repositories that will be monitored. Must be single-quoted and comma separated. For example, 'MyRepository1','MyRepository2'. To monitor all the repositories, leave default 'ALL' value.",
      "Type": "String",
    },
    "DataDuration": {
      "Default": "90",
      "Description": "Enter a duration (days) that Athena query uses to retrieve data. By default Athena query retrieves data within the last 90 days. We recommend you to limit the duration for performance optimization and cost reduction.",
      "Type": "Number",
    },
    "PrincipalList": {
      "Default": "",
      "Description": "If you selected List of AWS Account Numbers above, enter a comma separated AWS account numbers, e.g., 111111111111,222222222222. If you selected List of AWS Organization Ids, enter a comma separated AWS Organization Ids, e.g., o-xxxxxxxxxx,o-yyyyyyyyyy. Leave it blank if you don't use the multi-account feature.",
      "Type": "CommaDelimitedList",
    },
    "PrincipalType": {
      "AllowedValues": [
        "None",
        "AWS Account Number",
        "AWS Organization Id",
      ],
      "Default": "None",
      "Description": "The solution can collect metrics from multiple AWS accounts. To turn on the multi-account feature, select either AWS Account Number or AWS Organization Id which your AWS accounts belong to. Leave it to None to turn off this feature. ",
      "Type": "String",
    },
    "QuickSightPrincipalArn": {
      "AllowedPattern": "^$|^arn:\\S+:quicksight:\\S+:\\d{12}:user/\\S+$",
      "ConstraintDescription": "Provide an arn matching an Amazon Quicksight User ARN. The input did not match the validation pattern.",
      "Default": "",
      "Description": "Provide a QuickSight ADMIN user ARN (arn:aws:quicksight:AWSRegion:AWSAccountId:user/default/QuickSightUserName) to automatically create QuickSight dashboards. QuickSight Enterprise edition must be enabled for the account. To disable QuickSight dashboards creation, leave it blank.",
      "Type": "String",
    },
    "S3TransitionDays": {
      "Default": "365",
      "Description": "Enter the number of days after which you would like to transition Amazon S3 objects to Amazon S3 Glacier storage class. By default objects are transitioned to Glacier 365 days (one year) after creation.",
      "Type": "Number",
    },
    "TagsConfigCodeBuild": {
      "Description": "Enter a semicolon-separated list of tags, using a comma as a separator between the tag key and value (e.g. "env,prod;anotherKey,anotherValue"). Omitting a tag value will result in a filter that captures all values for that tag key. Only resources matching the combination of all the tags will be captured. Leave it blank if you do not use the tag feature.",
      "Type": "String",
    },
    "TagsConfigCodeCommit": {
      "Description": "Enter a semicolon-separated list of tags, using a comma as a separator between the tag key and value (e.g. "env,prod;anotherKey,anotherValue"). Omitting a tag value will result in a filter that captures all values for that tag key. Only resources matching the combination of all the tags will be captured. Leave it blank if you do not use the tag feature.",
      "Type": "String",
    },
    "TagsConfigCodePipeline": {
      "Description": "Enter a semicolon-separated list of tags, using a comma as a separator between the tag key and value (e.g. "env,prod;anotherKey,anotherValue"). Omitting a tag value will result in a filter that captures all values for that tag key. Only resources matching the combination of all the tags will be captured. Leave it blank if you do not use the tag feature.",
      "Type": "String",
    },
    "UseGitHub": {
      "AllowedValues": [
        "Yes",
        "No",
      ],
      "Default": "No",
      "Description": "Select Yes if GitHub is used as code repository, otherwise leave it to No.",
      "Type": "String",
    },
    "WebhookSecretToken": {
      "Default": "",
      "Description": "Enter a random string with high entropy to authenticate access to webhooks in GitHub. If a webhook payload header contains a matching secret, IP address authentication is bypassed. The string cannot contain commas (,), backward slashes (\\), or quotes ("). It is highly recommended to use secret to secure your GitHub webhook. To turn off secret authentication, leave it blank. Ignore this field if GitHub is not used.",
      "NoEcho": true,
      "Type": "String",
    },
  },
  "Resources": {
    "AddAthenaPartitionEventsRule8E73AEE0": {
      "Properties": {
        "Description": "DevOps Monitoring Dashboard on AWS solution - Event rule for adding Athena partitions",
        "ScheduleExpression": "cron(0 0 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AddAthenaPartitionLambdaFunction02003486",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AddAthenaPartitionLambdaFunction02003486": {
      "DependsOn": [
        "AddAthenaPartitionLambdaRoleDefaultPolicyBA8B41CD",
        "AddAthenaPartitionLambdaRoleA28EF3C7",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Node.js 16 is one of the latest lambda runtime versions supported by solution pipeline.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "cb09161db469a53591cb949a204070768e499ed3754f804b05812e25f9400717.zip",
        },
        "Description": "DevOps Monitoring Dashboard on AWS solution - This function runs on a daily schedule and adds a new partition to Amazon Athena table",
        "Environment": {
          "Variables": {
            "AthenaWorkGroup": {
              "Fn::Join": [
                "",
                [
                  "AWSDevOpsDashboardWG-",
                  {
                    "Fn::GetAtt": [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID",
                    ],
                  },
                ],
              ],
            },
            "CodeBuildMetricsTableName": {
              "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0",
            },
            "GitHubMetricsTableName": {
              "Ref": "GlueAthenaDatabaseGitHubMetricsGlueTableE4E043BF",
            },
            "LOG_LEVEL": "INFO",
            "MetricsDBName": {
              "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
            },
            "MetricsTableName": {
              "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
            },
            "MetricsURL": {
              "Fn::FindInMap": [
                "AnonymousData",
                "SendAnonymousUsageData",
                "MetricsURL",
              ],
            },
            "Region": {
              "Ref": "AWS::Region",
            },
            "SendAnonymousUsageData": {
              "Fn::FindInMap": [
                "AnonymousData",
                "SendAnonymousUsageData",
                "Data",
              ],
            },
            "SolutionId": "SO0143",
            "UUID": {
              "Fn::GetAtt": [
                "SolutionHelperCreateUniqueIDAF03406A",
                "UUID",
              ],
            },
            "UserAgentExtra": {
              "Fn::FindInMap": [
                "UserAgentExtra",
                "UserAgentExtra",
                "Key",
              ],
            },
            "Version": "v1.0.0",
          },
        },
        "Handler": "add_athena_partition.handler",
        "Role": {
          "Fn::GetAtt": [
            "AddAthenaPartitionLambdaRoleA28EF3C7",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 300,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "AddAthenaPartitionLambdaFunctionAwsEventsLambdaInvokePermission19FEC65E3": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AddAthenaPartitionLambdaFunction02003486",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AddAthenaPartitionEventsRule8E73AEE0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AddAthenaPartitionLambdaFunctionServiceRole34D9F028": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The policy is restricted to region, account and lambda resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AddAthenaPartitionLambdaRoleA28EF3C7": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Resource * is either required by API or the policy has necessary restrictions like partition, region, account, S3, glue resource, etc.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "Resource * is required for cloudwatch:GetMetricStatistics as it does not support resource-level permissions.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                  "Sid": "CreateCWLogs",
                },
                {
                  "Action": [
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:ListMultipartUploadParts",
                    "s3:AbortMultipartUpload",
                    "s3:CreateBucket",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::",
                          {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          },
                          "/athena_results/*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::",
                          {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::",
                          {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          },
                          "/*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "S3AccessPS",
                },
                {
                  "Action": "athena:StartQueryExecution",
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":athena:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":workgroup/AWSDevOpsDashboard*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":athena:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":workgroup/primary",
                        ],
                      ],
                    },
                  ],
                  "Sid": "AthenaQueryExecutionPS",
                },
                {
                  "Action": [
                    "glue:GetTable",
                    "glue:GetPartitions",
                    "glue:GetDatabase",
                    "glue:CreateTable",
                    "glue:UpdateTable",
                    "glue:BatchCreatePartition",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":catalog",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":database/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":table/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                          "/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":table/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                          "/*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "glueAccessPS",
                },
                {
                  "Action": "cloudwatch:GetMetricStatistics",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "cloudwatchAccessPS",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": {
              "Fn::Join": [
                "",
                [
                  "AddAthenaPartitionPolicy-",
                  {
                    "Fn::GetAtt": [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID",
                    ],
                  },
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AddAthenaPartitionLambdaRoleDefaultPolicyBA8B41CD": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Lambda needs resource * to send trace data to X-Ray",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AddAthenaPartitionLambdaRoleDefaultPolicyBA8B41CD",
        "Roles": [
          {
            "Ref": "AddAthenaPartitionLambdaRoleA28EF3C7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CanaryEventsCanaryEventsRule115776A2": {
      "Properties": {
        "Description": "DevOps Monitoring Dashboard on AWS solution - Event rule for Amazon CloudWatch Synthetics Canary Alarm",
        "EventPattern": {
          "detail": {
            "configuration": {
              "metrics": {
                "metricStat": {
                  "metric": {
                    "namespace": [
                      "CloudWatchSynthetics",
                    ],
                  },
                },
              },
            },
            "previousState": {
              "value": [
                "ALARM",
              ],
            },
            "state": {
              "value": [
                "OK",
              ],
            },
          },
          "detail-type": [
            "CloudWatch Alarm State Change",
          ],
          "source": [
            "aws.cloudwatch",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CodeBuildEventsCloudWatchMetricStreamB26149A1": {
      "Properties": {
        "FirehoseArn": {
          "Fn::GetAtt": [
            "CodeBuildEventsCodeBuildKinesisFirehose48AE2746",
            "Arn",
          ],
        },
        "IncludeFilters": [
          {
            "Namespace": "AWS/CodeBuild",
          },
        ],
        "OutputFormat": "json",
        "RoleArn": {
          "Fn::GetAtt": [
            "CodeBuildEventsCloudWatchMetricStreamRole047DA47A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudWatch::MetricStream",
    },
    "CodeBuildEventsCloudWatchMetricStreamRole047DA47A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "streams.metrics.cloudwatch.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "firehose:PutRecord",
                    "firehose:PutRecordBatch",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CodeBuildEventsCodeBuildKinesisFirehose48AE2746",
                      "Arn",
                    ],
                  },
                  "Sid": "FirehosePutRecordPS",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": {
              "Fn::Join": [
                "",
                [
                  "FirehosePutRecord-",
                  {
                    "Fn::GetAtt": [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID",
                    ],
                  },
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeBuildEventsCodeBuildEventParserBA00AD10": {
      "DependsOn": [
        "CodeBuildEventsCodeBuildEventParserLambdaRole6077AACD",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Node.js 16 is one of the latest lambda runtime versions supported by solution pipeline.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "There is no need to run this lambda in a VPC",
            },
            {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "d9672ae9291a998ce77b753315ebd6f239807aea0449aefac0469bdb5cb4a1e2.zip",
        },
        "Description": "DevOps Monitoring Dashboard on AWS solution - This function performs lambda transformation within kinesis firehose. It parses CloudWatch metrics for CodeBuild, sends relevant data to S3 for downstream operation",
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "UserAgentExtra": {
              "Fn::FindInMap": [
                "UserAgentExtra",
                "UserAgentExtra",
                "Key",
              ],
            },
          },
        },
        "Handler": "codebuild_index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildEventsCodeBuildEventParserLambdaRole6077AACD",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CodeBuildEventsCodeBuildEventParserLambdaRole6077AACD": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The policy is restricted to region, account and lambda resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                  "Sid": "CreateCWLogs",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": {
              "Fn::Join": [
                "",
                [
                  "CodeBuildEventParserLambdaPolicy-",
                  {
                    "Fn::GetAtt": [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID",
                    ],
                  },
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeBuildEventsCodeBuildEventParserLogRetention28A35144": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CodeBuildEventsCodeBuildEventParserBA00AD10",
              },
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CodeBuildEventsCodeBuildKinesisFirehose48AE2746": {
      "DependsOn": [
        "CodeBuildEventsCodeBuildKinesisFirehosePolicy928AD09F",
      ],
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK",
        },
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
              "Arn",
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 300,
            "SizeInMBs": 128,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CodeBuildEventsCodeBuildfirehoseloggroup37533DE5",
            },
            "LogStreamName": {
              "Ref": "CodeBuildEventsCodeBuildfirehoseloggroupfirehoselogstreamEEA2FA4F",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": true,
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {
                  "CaseInsensitive": true,
                },
              },
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {
                  "Compression": "SNAPPY",
                },
              },
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "CodeBuildEventsCodeBuildKinesisFirehoseRole28E73FBC",
                  "Arn",
                ],
              },
              "TableName": {
                "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0",
              },
            },
          },
          "ErrorOutputPrefix": "CodeBuildEventsProcessingErrorlogs/result=!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "CodeBuildEvents/created_at=!{timestamp:yyyy-MM-dd}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CodeBuildEventsCodeBuildEventParserBA00AD10",
                        "Arn",
                      ],
                    },
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CodeBuildEventsCodeBuildKinesisFirehoseRole28E73FBC",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CodeBuildEventsCodeBuildKinesisFirehosePolicy928AD09F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The policy is restricted to S3 bucket or region, account and glue resource",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:",
                    {
                      "Ref": "CodeBuildEventsCodeBuildfirehoseloggroup37533DE5",
                    },
                    ":log-stream:",
                    {
                      "Ref": "CodeBuildEventsCodeBuildfirehoseloggroupfirehoselogstreamEEA2FA4F",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:GetFunctionConfiguration",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildEventsCodeBuildEventParserBA00AD10",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildEventsCodeBuildEventParserBA00AD10",
                          "Arn",
                        ],
                      },
                      ":$LATEST",
                    ],
                  ],
                },
              ],
              "Sid": "InvokeLambda",
            },
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                      },
                      "/",
                      {
                        "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "glueAccessPSForCodeBuildEventsFirehose",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeBuildEventsCodeBuildKinesisFirehosePolicy928AD09F",
        "Roles": [
          {
            "Ref": "CodeBuildEventsCodeBuildKinesisFirehoseRole28E73FBC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeBuildEventsCodeBuildKinesisFirehoseRole28E73FBC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeBuildEventsCodeBuildfirehoseloggroup37533DE5": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeBuildEventsCodeBuildfirehoseloggroupfirehoselogstreamEEA2FA4F": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": {
          "Ref": "CodeBuildEventsCodeBuildfirehoseloggroup37533DE5",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeCommitEventsRule6F25533B": {
      "Properties": {
        "Description": "DevOps Monitoring Dashboard on AWS solution - Event rule for AWS CodeCommit",
        "EventPattern": {
          "detail": {
            "eventName": [
              "PutFile",
              "DeleteFile",
              "UpdateFile",
              "GitPush",
            ],
          },
          "detail-type": [
            "AWS API Call via CloudTrail",
          ],
          "source": [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CodeCommitEventsRuleInvokeKinesisFirehosePolicy1498E6F5": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "firehose:PutRecord",
                "firehose:PutRecordBatch",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeCommitEventsRuleInvokeKinesisFirehosePolicy1498E6F5",
        "Roles": [
          {
            "Ref": "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Events Rule To Kinesis Firehose Role",
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8": {
      "DependsOn": [
        "CodeCommitKinesisFirehoseToS3KinesisFirehosePolicy7335C74C",
        "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
      ],
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK",
        },
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
              "Arn",
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 300,
            "SizeInMBs": 128,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupD55CEEDC",
            },
            "LogStreamName": {
              "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupfirehoselogstreamC9CAC73D",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": true,
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {
                  "CaseInsensitive": true,
                },
              },
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {
                  "Compression": "SNAPPY",
                },
              },
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "CodeCommitKinesisFirehoseToS3KinesisFirehoseRole1FE64272",
                  "Arn",
                ],
              },
              "TableName": {
                "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
              },
              "VersionId": "LATEST",
            },
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":alias/aws/s3",
                  ],
                ],
              },
            },
          },
          "ErrorOutputPrefix": "DevopsEventsProcessingErrorlogs/result=!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "DevopsEvents/created_at=!{timestamp:yyyy-MM-dd}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "EventParserE8B3240E",
                        "Arn",
                      ],
                    },
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CodeCommitKinesisFirehoseToS3KinesisFirehoseRole1FE64272",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "CodeCommitKinesisFirehoseToS3KinesisFirehosePolicy7335C74C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The policy is restricted to region, account and glue resource",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The policy is restricted to S3 bucket or region, account and glue resource",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:",
                    {
                      "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupD55CEEDC",
                    },
                    ":log-stream:",
                    {
                      "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupfirehoselogstreamC9CAC73D",
                    },
                  ],
                ],
              },
            },
            {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:GetFunctionConfiguration",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EventParserE8B3240E",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "EventParserE8B3240E",
                          "Arn",
                        ],
                      },
                      ":$LATEST",
                    ],
                  ],
                },
              ],
              "Sid": "InvokeLambda",
            },
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                      },
                      "/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "glueAccessPSForFirehose",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeCommitKinesisFirehoseToS3KinesisFirehosePolicy7335C74C",
        "Roles": [
          {
            "Ref": "CodeCommitKinesisFirehoseToS3KinesisFirehoseRole1FE64272",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeCommitKinesisFirehoseToS3KinesisFirehoseRole1FE64272": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "aws-devops-metrics-",
              {
                "Fn::GetAtt": [
                  "SolutionHelperCreateUniqueIDAF03406A",
                  "UUID",
                ],
              },
            ],
          ],
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "NoncurrentVersionTransitions": [
                {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": {
                    "Ref": "S3TransitionDays",
                  },
                },
              ],
              "Status": "Enabled",
            },
          ],
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF",
          },
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerEnforced",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeCommitKinesisFirehoseToS3S3BucketPolicy4E0BD5BE": {
      "Properties": {
        "Bucket": {
          "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "This S3 bucket is used as the access logging bucket for another bucket.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for another bucket",
            },
          ],
        },
      },
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "aws-devops-metrics-logging-",
              {
                "Fn::GetAtt": [
                  "SolutionHelperCreateUniqueIDAF03406A",
                  "UUID",
                ],
              },
            ],
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeCommitKinesisFirehoseToS3S3LoggingBucketPolicyA9B174C1": {
      "Properties": {
        "Bucket": {
          "Ref": "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CodeCommitKinesisFirehoseToS3firehoseloggroupD55CEEDC": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeCommitKinesisFirehoseToS3firehoseloggroupfirehoselogstreamC9CAC73D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": {
          "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupD55CEEDC",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeDeployEventsCodeDeployEventsRule9A7B5DEA": {
      "Properties": {
        "Description": "DevOps Monitoring Dashboard on AWS solution - Event rule for AWS CodeDeploy",
        "EventPattern": {
          "detail-type": [
            "CodeDeploy Deployment State-change Notification",
          ],
          "source": [
            "aws.codedeploy",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CodePipelineAlarmEventsCodePipelineAlarmEventsRule89554585": {
      "Properties": {
        "Description": "DevOps Monitoring Dashboard on AWS solution - Event rule for AWS CodePipeline Alarm",
        "EventPattern": {
          "detail": {
            "configuration": {
              "metrics": {
                "metricStat": {
                  "metric": {
                    "namespace": [
                      "CodePipeline/SO0143/Pipelines",
                    ],
                  },
                },
              },
            },
            "previousState": {
              "value": [
                "ALARM",
              ],
            },
            "state": {
              "value": [
                "OK",
              ],
            },
          },
          "detail-type": [
            "CloudWatch Alarm State Change",
          ],
          "source": [
            "aws.cloudwatch",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CodePipelineEventsCodePipelineEventsRuleB5CD4C2A": {
      "Properties": {
        "Description": "DevOps Monitoring Dashboard on AWS solution - Event rule for AWS CodePipeline",
        "EventPattern": {
          "detail-type": [
            "CodePipeline Action Execution State Change",
          ],
          "source": [
            "aws.codepipeline",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CustomResourceQueryRunner": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AthenaWorkGroup": {
          "Fn::Join": [
            "",
            [
              "AWSDevOpsDashboardWG-",
              {
                "Fn::GetAtt": [
                  "SolutionHelperCreateUniqueIDAF03406A",
                  "UUID",
                ],
              },
            ],
          ],
        },
        "CodeBuildMetricsTableName": {
          "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0",
        },
        "CodeBuildTagsGlueTableName": {
          "Ref": "GlueAthenaDatabaseCodeBuildTagsGlueTableD0907B43",
        },
        "CodeCommitTagsGlueTableName": {
          "Ref": "GlueAthenaDatabaseCodeCommitTagsGlueTableB94ABA47",
        },
        "CodePipelineTagsGlueTableName": {
          "Ref": "GlueAthenaDatabaseCodePipelineTagsGlueTable89916F9D",
        },
        "DataDuration": {
          "Ref": "DataDuration",
        },
        "GitHubMetricsTableName": {
          "Ref": "GlueAthenaDatabaseGitHubMetricsGlueTableE4E043BF",
        },
        "MetricsDBName": {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
        },
        "MetricsTableName": {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
        },
        "RepositoryList": {
          "Ref": "CodeCommitRepo",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "QueryRunner0586B77B",
            "Arn",
          ],
        },
        "Version": "v1.0.0",
      },
      "Type": "Custom::QueryRunner",
      "UpdateReplacePolicy": "Delete",
    },
    "EventParserE8B3240E": {
      "DependsOn": [
        "EventParserLambdaRole3A607F90",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Node.js 16 is one of the latest lambda runtime versions supported by solution pipeline.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "There is no need to run this lambda in a VPC",
            },
            {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "d9672ae9291a998ce77b753315ebd6f239807aea0449aefac0469bdb5cb4a1e2.zip",
        },
        "Description": "DevOps Monitoring Dashboard on AWS solution - This function performs lambda transformation within kinesis firehose. It parses raw cloudwatch events, sends relevant data to S3 for downstream operation",
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "EventParserLambdaRole3A607F90",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "EventParserLambdaRole3A607F90": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The policy is restricted to region, account and lambda resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                  "Sid": "CreateCWLogs",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": {
              "Fn::Join": [
                "",
                [
                  "EventParserLambdaPolicy-",
                  {
                    "Fn::GetAtt": [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID",
                    ],
                  },
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EventParserLogRetentionEE2D5A71": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "EventParserE8B3240E",
              },
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "GitHubStackNestedStackGitHubStackNestedStackResource3B60958E": {
      "Condition": "GitHubCondition",
      "DeletionPolicy": "Delete",
      "Description": "(SO0143)DevOps Monitoring Dashboard on AWS - Create AWS Resources needed to process GitHub events. Version: v1.0.0",
      "Metadata": {
        "nestedStackFileName": "DevopsDashboardStackGitHubStack7BADA944.nested.template",
      },
      "Properties": {
        "Parameters": {
          "referencetoDevopsDashboardStackAllowedIPs56B4DE68Ref": {
            "Ref": "AllowedIPs",
          },
          "referencetoDevopsDashboardStackCodeCommitKinesisFirehoseToS3S3Bucket455CCE35Arn": {
            "Fn::GetAtt": [
              "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
              "Arn",
            ],
          },
          "referencetoDevopsDashboardStackGlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseC4FAA1E8Ref": {
            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
          },
          "referencetoDevopsDashboardStackGlueAthenaDatabaseGitHubMetricsGlueTable9A8E6DD6Ref": {
            "Ref": "GlueAthenaDatabaseGitHubMetricsGlueTableE4E043BF",
          },
          "referencetoDevopsDashboardStackSolutionHelperCreateUniqueID00935C8CUUID": {
            "Fn::GetAtt": [
              "SolutionHelperCreateUniqueIDAF03406A",
              "UUID",
            ],
          },
          "referencetoDevopsDashboardStackWebhookSecretTokenF236DDB5Ref": {
            "Ref": "WebhookSecretToken",
          },
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.",
              {
                "Ref": "AWS::Region",
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
              },
              "/ee1cdc3df91d8667bb6f1f7c2879a0635ae22c25c7575fc24d80dd8e668b7a33.json",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "GlueAthenaDatabaseAWSDevOpsDashboardAthenaWorkGroupCA26D38C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-ATH1",
              "reason": "The Athena query result is encrypted using SSE_S3.",
            },
          ],
        },
      },
      "Properties": {
        "Description": "DevOps Monitoring Dashboard on AWS solution Athena Work Group",
        "Name": {
          "Fn::Join": [
            "",
            [
              "AWSDevOpsDashboardWG-",
              {
                "Fn::GetAtt": [
                  "SolutionHelperCreateUniqueIDAF03406A",
                  "UUID",
                ],
              },
            ],
          ],
        },
        "RecursiveDeleteOption": true,
        "State": "ENABLED",
        "WorkGroupConfiguration": {
          "EngineVersion": {
            "SelectedEngineVersion": "Athena engine version 2",
          },
          "PublishCloudWatchMetricsEnabled": true,
          "ResultConfiguration": {
            "EncryptionConfiguration": {
              "EncryptionOption": "SSE_S3",
            },
            "OutputLocation": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                  },
                  "/athena_query_output/",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": {
          "Name": "aws_devops_metrics_db_so0143",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
        },
        "TableInput": {
          "Description": "DevOps Monitoring Dashboard on AWS solution - AWS DevOps Metrics Glue table",
          "Name": "aws_devops_metrics_table",
          "Parameters": {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "version",
                "Type": "string",
              },
              {
                "Name": "id",
                "Type": "string",
              },
              {
                "Name": "detail_type",
                "Type": "string",
              },
              {
                "Name": "source",
                "Type": "string",
              },
              {
                "Name": "account",
                "Type": "string",
              },
              {
                "Name": "time",
                "Type": "timestamp",
              },
              {
                "Name": "region",
                "Type": "string",
              },
              {
                "Comment": "array<string>",
                "Name": "resources",
                "Type": "array<string>",
              },
              {
                "Comment": "struct<nested_column:datatype>",
                "Name": "detail",
                "Type": "struct<eventName:string,repositoryName:string,branchName:string,authorName:string,commitId:string,canaryAlarmName:string,canaryAlarmAppName:string,canaryAlarmRepoName:string,canaryAlarmCurrState:string,canaryAlarmPrevState:string,canaryAlarmCurrStateTimeStamp:timestamp,canaryAlarmPrevStateTimeStamp:timestamp,recoveryDurationMinutes:int,deploymentState:string,deploymentId:string,deploymentApplication:string,pipelineName:string,executionId:string,stage:string,action:string,state:string,externalExecutionId:string,actionCategory:string,actionOwner:string,actionProvider:string,alarmType:string>",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                  },
                  "/DevopsEvents/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
        },
        "TableInput": {
          "Description": "DevOps Monitoring Dashboard on AWS solution - AWS CodeBuild Metrics Glue table",
          "Name": "aws_codebuild_metrics_table",
          "Parameters": {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "metric_stream_name",
                "Type": "string",
              },
              {
                "Name": "account_id",
                "Type": "string",
              },
              {
                "Name": "region",
                "Type": "string",
              },
              {
                "Name": "namespace",
                "Type": "string",
              },
              {
                "Name": "metric_name",
                "Type": "string",
              },
              {
                "Name": "dimensions",
                "Type": "struct<ProjectName:string,BuildId:string,BuildNumber:int>",
              },
              {
                "Name": "timestamp",
                "Type": "bigint",
              },
              {
                "Comment": "struct<nested_column:datatype>",
                "Name": "value",
                "Type": "struct<count:double,sum:double,max:double,min:double>",
              },
              {
                "Name": "unit",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                  },
                  "/CodeBuildEvents/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "GlueAthenaDatabaseCodeBuildTagsGlueTableD0907B43": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
        },
        "TableInput": {
          "Description": "DevOps Monitoring Dashboard on AWS solution - AWS CodeBuild Tags Glue table",
          "Name": "tagged_codebuild_table",
          "Parameters": {
            "classification": "json",
            "has_encrypted_data": false,
          },
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_id",
                "Type": "string",
              },
              {
                "Name": "region",
                "Type": "string",
              },
              {
                "Name": "resource_type",
                "Type": "string",
              },
              {
                "Name": "resource_name",
                "Type": "string",
              },
              {
                "Name": "tag",
                "Type": "string",
              },
              {
                "Name": "create_time_stamp",
                "Type": "timestamp",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                  },
                  "/TaggedResources/CodeBuild/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.openx.data.jsonserde.JsonSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "GlueAthenaDatabaseCodeCommitTagsGlueTableB94ABA47": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
        },
        "TableInput": {
          "Description": "DevOps Monitoring Dashboard on AWS solution - AWS CodeCommit Tags Glue table",
          "Name": "tagged_codecommit_table",
          "Parameters": {
            "classification": "json",
            "has_encrypted_data": false,
          },
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_id",
                "Type": "string",
              },
              {
                "Name": "region",
                "Type": "string",
              },
              {
                "Name": "resource_type",
                "Type": "string",
              },
              {
                "Name": "resource_name",
                "Type": "string",
              },
              {
                "Name": "tag",
                "Type": "string",
              },
              {
                "Name": "create_time_stamp",
                "Type": "timestamp",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                  },
                  "/TaggedResources/CodeCommit/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.openx.data.jsonserde.JsonSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "GlueAthenaDatabaseCodePipelineTagsGlueTable89916F9D": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
        },
        "TableInput": {
          "Description": "DevOps Monitoring Dashboard on AWS solution - AWS CodePipeline Tags Glue table",
          "Name": "tagged_codepipeline_table",
          "Parameters": {
            "classification": "json",
            "has_encrypted_data": false,
          },
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "account_id",
                "Type": "string",
              },
              {
                "Name": "region",
                "Type": "string",
              },
              {
                "Name": "resource_type",
                "Type": "string",
              },
              {
                "Name": "resource_name",
                "Type": "string",
              },
              {
                "Name": "tag",
                "Type": "string",
              },
              {
                "Name": "create_time_stamp",
                "Type": "timestamp",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                  },
                  "/TaggedResources/CodePipeline/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.openx.data.jsonserde.JsonSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "GlueAthenaDatabaseGitHubMetricsGlueTableE4E043BF": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
        },
        "TableInput": {
          "Description": "DevOps Monitoring Dashboard on AWS solution - GitHub Metrics Glue table",
          "Name": "aws_github_metrics_table",
          "Parameters": {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "repository_name",
                "Type": "string",
              },
              {
                "Name": "branch_name",
                "Type": "string",
              },
              {
                "Name": "author_name",
                "Type": "string",
              },
              {
                "Name": "event_name",
                "Type": "string",
              },
              {
                "Comment": "array<string>",
                "Name": "commit_id",
                "Type": "array<string>",
              },
              {
                "Name": "time",
                "Type": "timestamp",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                  },
                  "/GitHubEvents/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda has the required permission to write CloudWatch Logs through a custom policy.",
            },
            {
              "id": "W89",
              "reason": "There is no need to deploy this Lambda to a VPC.",
            },
            {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency.",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "eb5b005c858404ea0c8f68098ed5dcdf5340e02461f149751d10f59c210d5ef8.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "The managed policy is automatically generated by CDK itself to enable log retention.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Resource * is required by the Lambda Execution role, so that the Lambda can add ResourcePolicies to all required resources.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Resource * is required by the Lambda Execution role, so that the Lambda can add ResourcePolicies to all required resources.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "QSDashboardNestedStackQSDashboardNestedStackResourceF5171359": {
      "Condition": "QuickSightCondition",
      "DeletionPolicy": "Delete",
      "Description": "(SO0143)DevOps Monitoring Dashboard on AWS - Create QuickSight Template. Version: v1.0.0",
      "Metadata": {
        "nestedStackFileName": "DevopsDashboardStackQSDashboard0560D204.nested.template",
      },
      "Properties": {
        "Parameters": {
          "AthenaWorkGroupName": {
            "Fn::Join": [
              "",
              [
                "AWSDevOpsDashboardWG-",
                {
                  "Fn::GetAtt": [
                    "SolutionHelperCreateUniqueIDAF03406A",
                    "UUID",
                  ],
                },
              ],
            ],
          },
          "ParentStackName": {
            "Ref": "AWS::StackName",
          },
          "QuickSightPrincipalArn": {
            "Ref": "QuickSightPrincipalArn",
          },
          "SolutionID": "SO0143",
          "SolutionName": "DevOps Monitoring Dashboard on AWS",
          "SolutionVersion": "v1.0.0",
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.",
              {
                "Ref": "AWS::Region",
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
              },
              "/7c08fd56ee39afdb8558661cd70ef74f3f984b79381e4478f9c137db59391352.json",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "QueryRunner0586B77B": {
      "DependsOn": [
        "queryRunnerLambdaRoleB4DE757D",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Node.js 16 is one of the latest lambda runtime versions supported by solution pipeline.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "There is no need to run this lambda in a VPC",
            },
            {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "cb09161db469a53591cb949a204070768e499ed3754f804b05812e25f9400717.zip",
        },
        "Description": "DevOps Monitoring Dashboard on AWS solution - This function runs Amazon Athena queries and creates views.",
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "queryRunnerLambdaRoleB4DE757D",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "QueryRunnerLogRetention4166B125": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "QueryRunner0586B77B",
              },
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SendAnonymousUsageData": {
      "Condition": "AnonymousDataToAWS",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AthenaQueryDataDuration": {
          "Ref": "DataDuration",
        },
        "MetricsURL": {
          "Fn::FindInMap": [
            "AnonymousData",
            "SendAnonymousUsageData",
            "MetricsURL",
          ],
        },
        "PrincipalCount": 1,
        "PrincipalType": {
          "Fn::If": [
            "OrganizationCondition",
            "Organization",
            "Account",
          ],
        },
        "QuickSightPrincipalArn": {
          "Ref": "QuickSightPrincipalArn",
        },
        "Region": {
          "Ref": "AWS::Region",
        },
        "RepositoryList": {
          "Ref": "CodeCommitRepo",
        },
        "S3TransitionDays": {
          "Ref": "S3TransitionDays",
        },
        "SendAnonymousUsageData": {
          "Fn::FindInMap": [
            "AnonymousData",
            "SendAnonymousUsageData",
            "Data",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "QueryRunner0586B77B",
            "Arn",
          ],
        },
        "SolutionId": "SO0143",
        "UUID": {
          "Fn::GetAtt": [
            "SolutionHelperCreateUniqueIDAF03406A",
            "UUID",
          ],
        },
        "UseGitHubRepository": {
          "Ref": "UseGitHub",
        },
        "UseMultiAccount": {
          "Fn::If": [
            "MultiAccountCondition",
            "yes",
            "no",
          ],
        },
        "UseWebhookSecret": {
          "Fn::If": [
            "WebhookSecretTokenCondition",
            "yes",
            "no",
          ],
        },
        "Version": "v1.0.0",
      },
      "Type": "Custom::SendAnonymousUsageData",
      "UpdateReplacePolicy": "Delete",
    },
    "SolutionHelper4825923B": {
      "DependsOn": [
        "SolutionHelperHelperRole142364AA",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "There is no need to run this lambda in a VPC",
            },
            {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "2e44e53d3a24a9ca1d5325bb0617865066cd73086570e45994518cc65435f2ff.zip",
        },
        "Description": "DevOps Monitoring Dashboard on AWS solution - This function generates UUID for each deployment.",
        "Environment": {
          "Variables": {
            "UserAgentExtra": "AwsSolution/SO0143/v1.0.0",
          },
        },
        "Handler": "lambda_function.handler",
        "Role": {
          "Fn::GetAtt": [
            "SolutionHelperHelperRole142364AA",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SolutionHelperCreateUniqueIDAF03406A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Resource": "UUID",
        "ServiceToken": {
          "Fn::GetAtt": [
            "SolutionHelper4825923B",
            "Arn",
          ],
        },
      },
      "Type": "Custom::CreateUUID",
      "UpdateReplacePolicy": "Delete",
    },
    "SolutionHelperHelperRole142364AA": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The policy is restricted to region, account and lambda resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "CloudWatchLogsPolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SolutionHelperLogRetention92874000": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "SolutionHelper4825923B",
              },
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "TagQueryE8AE49BA": {
      "DependsOn": [
        "TagQueryRoleDefaultPolicy7379AC5B",
        "TagQueryRoleA60A4D7B",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Node.js 16 is one of the latest lambda runtime versions supported by solution pipeline.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda has the required permission to write CloudWatch Logs through a custom policy.",
            },
            {
              "id": "W89",
              "reason": "This lambda does not need to be deployed inside a VPC",
            },
            {
              "id": "W92",
              "reason": "This lambda does not need reserved concurrent executions",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "4545a612aadb4c6f19992890be4a594dfd9c8f66f629b43f29b7cf06311aa9f8.zip",
        },
        "Description": "DevOps Monitoring Dashboard on AWS solution - This function queries CodeCommit, CodeBuild, and CodePipeline resources for tag information.",
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "METRICS_URL": {
              "Fn::FindInMap": [
                "AnonymousData",
                "SendAnonymousUsageData",
                "MetricsURL",
              ],
            },
            "SEND_ANONYMOUS_USAGE_METRICS": {
              "Fn::FindInMap": [
                "AnonymousData",
                "SendAnonymousUsageData",
                "Data",
              ],
            },
            "SOLUTION_ID": "SO0143",
            "SOLUTION_UUID": {
              "Fn::GetAtt": [
                "SolutionHelperCreateUniqueIDAF03406A",
                "UUID",
              ],
            },
            "SOLUTION_VERSION": "v1.0.0",
            "STACK_TYPE": "monitoring",
            "USER_AGENT_EXTRA": {
              "Fn::FindInMap": [
                "UserAgentExtra",
                "UserAgentExtra",
                "Key",
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "TagQueryRoleA60A4D7B",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "TagQueryInvokeTagQuery42CA6DAC": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "TagQueryPolicyDFB4C0BD",
      ],
      "Properties": {
        "CodeBuildTagConfig": {
          "Ref": "TagsConfigCodeBuild",
        },
        "CodeCommitTagConfig": {
          "Ref": "TagsConfigCodeCommit",
        },
        "CodePipelineTagConfig": {
          "Ref": "TagsConfigCodePipeline",
        },
        "ReportBucket": {
          "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "TagQueryE8AE49BA",
            "Arn",
          ],
        },
      },
      "Type": "Custom::InvokeTagQuery",
      "UpdateReplacePolicy": "Delete",
    },
    "TagQueryPolicyDFB4C0BD": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcard permissions required for logging, GetResources, and uploading to S3.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "This lambda requires wildcard permissions to write logs, query tag information, and upload reports",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/*",
                  ],
                ],
              },
              "Sid": "LogsStatement",
            },
            {
              "Action": "tag:GetResources",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "TagStatement",
            },
            {
              "Action": [
                "s3:PutObject",
                "s3:DeleteObject",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                        "Arn",
                      ],
                    },
                    "/TaggedResources/*",
                  ],
                ],
              },
              "Sid": "ReportStatement",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TagQueryPolicyDFB4C0BD",
        "Roles": [
          {
            "Ref": "TagQueryRoleA60A4D7B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TagQueryRoleA60A4D7B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TagQueryRoleDefaultPolicy7379AC5B": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Wildcard permissions required for xray.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Wildcard permissions required for xray.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TagQueryRoleDefaultPolicy7379AC5B",
        "Roles": [
          {
            "Ref": "TagQueryRoleA60A4D7B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TagQueryRule26FBA3FD": {
      "Properties": {
        "Description": "DevOps Monitoring Dashboard on AWS solution - Event rule for querying tag information",
        "ScheduleExpression": "rate(15 minutes)",
        "State": {
          "Fn::If": [
            "TagQueryAnyTagConfigsCond060F5869",
            "ENABLED",
            "DISABLED",
          ],
        },
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "TagQueryE8AE49BA",
                "Arn",
              ],
            },
            "Id": "Target0",
            "Input": {
              "Fn::Join": [
                "",
                [
                  "{"ReportBucket":"",
                  {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                  },
                  "","CodeCommitTagConfig":"",
                  {
                    "Ref": "TagsConfigCodeCommit",
                  },
                  "","CodeBuildTagConfig":"",
                  {
                    "Ref": "TagsConfigCodeBuild",
                  },
                  "","CodePipelineTagConfig":"",
                  {
                    "Ref": "TagsConfigCodePipeline",
                  },
                  ""}",
                ],
              ],
            },
            "RetryPolicy": {
              "MaximumRetryAttempts": 0,
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "TagQueryRuleAllowEventRuleDevopsDashboardStackTagQuery3507C013A17970C7": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "TagQueryE8AE49BA",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "TagQueryRule26FBA3FD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "monitoringAcctPermissionCanaryEventsForCustomEventBusCanaryEventsRule55E14CB5": {
      "Condition": "MultiAccountCondition",
      "Properties": {
        "Description": "DevOps Monitoring Dashboard on AWS solution - Event rule for Amazon CloudWatch Synthetics Canary Alarm",
        "EventBusName": {
          "Ref": "monitoringAcctPermissionDevOpsCustomEventBus1C7F31BE",
        },
        "EventPattern": {
          "detail": {
            "configuration": {
              "metrics": {
                "metricStat": {
                  "metric": {
                    "namespace": [
                      "CloudWatchSynthetics",
                    ],
                  },
                },
              },
            },
            "previousState": {
              "value": [
                "ALARM",
              ],
            },
            "state": {
              "value": [
                "OK",
              ],
            },
          },
          "detail-type": [
            "CloudWatch Alarm State Change",
          ],
          "source": [
            "aws.cloudwatch",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "monitoringAcctPermissionCodeCommitEventsForCustomEventBusCodeCommitEventsRule992C6188": {
      "Condition": "MultiAccountCondition",
      "Properties": {
        "Description": "DevOps Monitoring Dashboard on AWS solution - Event rule for AWS CodeCommit",
        "EventBusName": {
          "Ref": "monitoringAcctPermissionDevOpsCustomEventBus1C7F31BE",
        },
        "EventPattern": {
          "detail": {
            "eventName": [
              "PutFile",
              "DeleteFile",
              "UpdateFile",
              "GitPush",
            ],
          },
          "detail-type": [
            "AWS API Call via CloudTrail",
          ],
          "source": [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "monitoringAcctPermissionCodeDeployEventsForCustomEventBusCodeDeployEventsRule32F696BE": {
      "Condition": "MultiAccountCondition",
      "Properties": {
        "Description": "DevOps Monitoring Dashboard on AWS solution - Event rule for AWS CodeDeploy",
        "EventBusName": {
          "Ref": "monitoringAcctPermissionDevOpsCustomEventBus1C7F31BE",
        },
        "EventPattern": {
          "detail-type": [
            "CodeDeploy Deployment State-change Notification",
          ],
          "source": [
            "aws.codedeploy",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "monitoringAcctPermissionCodePipelineAlarmEventsForCustomEventBusCodePipelineAlarmEventsRuleBC90948D": {
      "Condition": "MultiAccountCondition",
      "Properties": {
        "Description": "DevOps Monitoring Dashboard on AWS solution - Event rule for AWS CodePipeline Alarm",
        "EventBusName": {
          "Ref": "monitoringAcctPermissionDevOpsCustomEventBus1C7F31BE",
        },
        "EventPattern": {
          "detail": {
            "configuration": {
              "metrics": {
                "metricStat": {
                  "metric": {
                    "namespace": [
                      "CodePipeline/SO0143/Pipelines",
                    ],
                  },
                },
              },
            },
            "previousState": {
              "value": [
                "ALARM",
              ],
            },
            "state": {
              "value": [
                "OK",
              ],
            },
          },
          "detail-type": [
            "CloudWatch Alarm State Change",
          ],
          "source": [
            "aws.cloudwatch",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "monitoringAcctPermissionCodePipelineEventsForCustomEventBusCodePipelineEventsRuleAA636427": {
      "Condition": "MultiAccountCondition",
      "Properties": {
        "Description": "DevOps Monitoring Dashboard on AWS solution - Event rule for AWS CodePipeline",
        "EventBusName": {
          "Ref": "monitoringAcctPermissionDevOpsCustomEventBus1C7F31BE",
        },
        "EventPattern": {
          "detail-type": [
            "CodePipeline Action Execution State Change",
          ],
          "source": [
            "aws.codepipeline",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "monitoringAcctPermissionCustomResourceMonitoringAcctPermission235F99B0": {
      "Condition": "MultiAccountCondition",
      "DeletionPolicy": "Delete",
      "Properties": {
        "EventBusName": {
          "Ref": "monitoringAcctPermissionDevOpsCustomEventBus1C7F31BE",
        },
        "MetricsBucketName": {
          "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
        },
        "PrincipalList": {
          "Ref": "PrincipalList",
        },
        "PrincipalType": {
          "Fn::If": [
            "OrganizationCondition",
            "Organization",
            "Account",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "monitoringAcctPermissionMonitoringAcctPermissionLambda78753D82",
            "Arn",
          ],
        },
        "UUID": {
          "Fn::GetAtt": [
            "SolutionHelperCreateUniqueIDAF03406A",
            "UUID",
          ],
        },
        "version": "v1.0.0",
      },
      "Type": "Custom::MonitoringAcctPermission",
      "UpdateReplacePolicy": "Retain",
    },
    "monitoringAcctPermissionDevOpsCustomEventBus1C7F31BE": {
      "Condition": "MultiAccountCondition",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              "DevOpsCustomEventBus-",
              {
                "Fn::GetAtt": [
                  "SolutionHelperCreateUniqueIDAF03406A",
                  "UUID",
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::Events::EventBus",
    },
    "monitoringAcctPermissionMonitoringAcctPermissionLambda78753D82": {
      "Condition": "MultiAccountCondition",
      "DependsOn": [
        "monitoringAcctPermissionMonitoringAcctPermissionLambdaRole06DC758F",
      ],
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-L1",
              "reason": "Node.js 16 is one of the latest lambda runtime versions supported by solution pipeline.",
            },
          ],
        },
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "There is no need to run this lambda in a VPC",
            },
            {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "188061b3de3f8fbb846988ce072c5217fefa0567a075bb85ec2d37ef6ca3b498.zip",
        },
        "Description": "DevOps Monitoring Dashboard on AWS solution - This function manages permissions in the central monitoring account that are required for processing metrics sent by other accounts.",
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "UserAgentExtra": {
              "Fn::FindInMap": [
                "UserAgentExtra",
                "UserAgentExtra",
                "Key",
              ],
            },
          },
        },
        "Handler": "monitoring_account_permission_index.handler",
        "Role": {
          "Fn::GetAtt": [
            "monitoringAcctPermissionMonitoringAcctPermissionLambdaRole06DC758F",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "monitoringAcctPermissionMonitoringAcctPermissionLambdaLogRetention671B7F77": {
      "Condition": "MultiAccountCondition",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "monitoringAcctPermissionMonitoringAcctPermissionLambda78753D82",
              },
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "monitoringAcctPermissionMonitoringAcctPermissionLambdaRole06DC758F": {
      "Condition": "MultiAccountCondition",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The policy is restricted to partition, region, account and lambda resource.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                  "Sid": "CreateCWLogs",
                },
                {
                  "Action": [
                    "events:DescribeEventBus",
                    "events:RemovePermission",
                    "events:PutPermission",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "monitoringAcctPermissionDevOpsCustomEventBus1C7F31BE",
                      "Arn",
                    ],
                  },
                  "Sid": "CWEventBus",
                },
                {
                  "Action": [
                    "s3:PutBucketPolicy",
                    "s3:GetBucketPolicy",
                    "s3:DeleteBucketPolicy",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":s3:::",
                        {
                          "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                        },
                      ],
                    ],
                  },
                  "Sid": "S3BucketPolicy",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": {
              "Fn::Join": [
                "",
                [
                  "MonitoringAcctPermissionLambdaPolicy-",
                  {
                    "Fn::GetAtt": [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID",
                    ],
                  },
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "queryRunnerLambdaRoleB4DE757D": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "The policy is restricted to S3 bucket or region, account and glue resource",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                  "Sid": "CreateCWLogs",
                },
                {
                  "Action": [
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:ListMultipartUploadParts",
                    "s3:AbortMultipartUpload",
                    "s3:CreateBucket",
                    "s3:PutObject",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::",
                          {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          },
                          "/athena_results/*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::",
                          {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::",
                          {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          },
                          "/*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::aws-athena-query-results-*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::query-results-custom-bucket",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::query-results-custom-bucket/*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "s3AccessPSwAthena",
                },
                {
                  "Action": "athena:StartQueryExecution",
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":athena:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":workgroup/AWSDevOpsDashboard*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":athena:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":workgroup/primary",
                        ],
                      ],
                    },
                  ],
                  "Sid": "AthenaQueryExecutionPS",
                },
                {
                  "Action": [
                    "glue:GetTable",
                    "glue:GetPartitions",
                    "glue:GetDatabase",
                    "glue:CreateTable",
                    "glue:UpdateTable",
                    "glue:BatchCreatePartition",
                    "glue:DeleteTable",
                    "glue:DeletePartition",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":catalog",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":database/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":table/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                          "/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1",
                          },
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":table/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                          "/*",
                        ],
                      ],
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":table/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF",
                          },
                          "/",
                          {
                            "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0",
                          },
                        ],
                      ],
                    },
                  ],
                  "Sid": "glueAccessPS",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": {
              "Fn::Join": [
                "",
                [
                  "queryRunnerLambdaPolicy-",
                  {
                    "Fn::GetAtt": [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID",
                    ],
                  },
                ],
              ],
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
