// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot test for codepipeline alarm stack 1`] = `
Object {
  "Conditions": Object {
    "CodePipelineAlarmCreateLogGroupTrue2C38BECE": Object {
      "Fn::Equals": Array [
        "YES",
        Object {
          "Ref": "CreateLogGroup",
        },
      ],
    },
  },
  "Mappings": Object {
    "CodePipelineMetrics": Object {
      "CodePipelineMetrics": Object {
        "NameSpace": "CodePipeline/SO0143/Pipelines",
      },
    },
  },
  "Metadata": Object {
    "AWS::CloudFormation::Interface": Object {
      "ParameterGroups": Array [
        Object {
          "Label": Object {
            "default": "Events Rule Configuration",
          },
          "Parameters": Array [
            "CodePipelineName",
            "CreateLogGroup",
            "LogGroupName",
          ],
        },
        Object {
          "Label": Object {
            "default": "Alarm Configuration",
          },
          "Parameters": Array [
            "RepoName",
          ],
        },
      ],
      "ParameterLabels": Object {
        "CodePipelineName": Object {
          "default": "CodePipeline Name",
        },
        "CreateLogGroup": Object {
          "default": "Create a new log Group?",
        },
        "LogGroupName": Object {
          "default": "Log Group Name",
        },
        "RepoName": Object {
          "default": "Repository Name",
        },
      },
    },
    "cdk_nag": Object {
      "rules_to_suppress": Array [
        Object {
          "id": "AwsSolutions-IAM5",
          "reason": "Resource * is required by the Lambda Execution role, so that the Lambda can add ResourcePolicies to all required resources.",
        },
        Object {
          "id": "AwsSolutions-IAM4",
          "reason": "The managed policy is automatically generated by CDK to be used by lambda service role.",
        },
        Object {
          "id": "AwsSolutions-L1",
          "reason": "The lambda function and its runtime are automatically generated by CDK.",
        },
      ],
    },
  },
  "Outputs": Object {
    "AlarmName": Object {
      "Description": "Name of the CodePipeline alarm",
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "SO0143-[",
            Object {
              "Ref": "CodePipelineName",
            },
            "]-[",
            Object {
              "Ref": "RepoName",
            },
            "]-MTTR",
          ],
        ],
      },
    },
    "LogGroupName": Object {
      "Description": "Name of the log group",
      "Value": Object {
        "Ref": "LogGroupName",
      },
    },
    "SolutionVersion": Object {
      "Description": "Version for DevOps Monitoring Dashboard on AWS solution",
      "Value": "v1.0.0",
    },
  },
  "Parameters": Object {
    "CodePipelineName": Object {
      "Description": "Name of the CodePipeline. Change the default value as needed.",
      "Type": "String",
    },
    "CreateLogGroup": Object {
      "AllowedValues": Array [
        "YES",
        "NO",
      ],
      "Default": "YES",
      "Description": "Create a new log group? Select YES to create a new log group if this is the first time you deploy the stack. For subsequent stack update, recommend to select NO to reuse the existing log group. Specify the Log group name below.",
      "Type": "String",
    },
    "LogGroupName": Object {
      "Default": "my-codepipeline-log-group",
      "Description": "Name of the CodePipeline log group to which the pipeline events are sent. Change the default value as needed.",
      "Type": "String",
    },
    "RepoName": Object {
      "Description": "Name of source repository for the code pipeline. It will be part of the alarm name. Change the default value as needed.",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": Object {
      "DependsOn": Array [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda has the required permission to write CloudWatch Logs through a custom policy.",
            },
            Object {
              "id": "W89",
              "reason": "No need to deploy this Lambda to a VPC.",
            },
            Object {
              "id": "W92",
              "reason": "No need for simultaneous executions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CodePipelineAlarmAppAlarmC62B9C08": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W28",
              "reason": "Static names chosen intentionally to provide fixed name structure required in the solution",
            },
          ],
        },
      },
      "Properties": Object {
        "AlarmDescription": "Goes to alarm state when there is one failed code pipeline execution on the most recent check.",
        "AlarmName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "SO0143-[",
              Object {
                "Ref": "CodePipelineName",
              },
              "]-[",
              Object {
                "Ref": "RepoName",
              },
              "]-MTTR",
            ],
          ],
        },
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "EvaluationPeriods": 1,
        "MetricName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "FailedExecution-",
              Object {
                "Ref": "CodePipelineName",
              },
            ],
          ],
        },
        "Namespace": Object {
          "Fn::FindInMap": Array [
            "CodePipelineMetrics",
            "CodePipelineMetrics",
            "NameSpace",
          ],
        },
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "CodePipelineAlarmFailedPipelineExecutionMetricFilter36FFD4B2": Object {
      "DependsOn": Array [
        "CodePipelineAlarmPipelineLogGroupB061BB52",
      ],
      "Properties": Object {
        "FilterPattern": "{($.detail.state = \\"FAILED\\")}",
        "LogGroupName": Object {
          "Ref": "LogGroupName",
        },
        "MetricTransformations": Array [
          Object {
            "DefaultValue": 0,
            "MetricName": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "FailedExecution-",
                  Object {
                    "Ref": "CodePipelineName",
                  },
                ],
              ],
            },
            "MetricNamespace": Object {
              "Fn::FindInMap": Array [
                "CodePipelineMetrics",
                "CodePipelineMetrics",
                "NameSpace",
              ],
            },
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "CodePipelineAlarmPipelineEventsRule97CA1513": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "state": Array [
              "FAILED",
              "SUCCEEDED",
            ],
          },
          "detail-type": Array [
            "CodePipeline Pipeline Execution State Change",
          ],
          "source": Array [
            "aws.codepipeline",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":logs:",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ":",
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ":log-group:",
                  Object {
                    "Ref": "LogGroupName",
                  },
                ],
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CodePipelineAlarmPipelineLogGroupB061BB52": Object {
      "Condition": "CodePipelineAlarmCreateLogGroupTrue2C38BECE",
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W84",
              "reason": "CloudWatch LogGroups are encrypted by default.",
            },
          ],
        },
      },
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "LogGroupName",
        },
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "EventsLogGroupPolicyCodePipelineAlarmPipelineEventsRule4FBE0864CustomResourcePolicyD35BFE30": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Resource * is required by the Lambda Execution role, so that the Lambda can add ResourcePolicies to all required resources.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "logs:PutResourcePolicy",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "logs:DeleteResourcePolicy",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EventsLogGroupPolicyCodePipelineAlarmPipelineEventsRule4FBE0864CustomResourcePolicyD35BFE30",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EventsLogGroupPolicyCodePipelineAlarmPipelineEventsRule4FBE0864F2A10BA1": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "EventsLogGroupPolicyCodePipelineAlarmPipelineEventsRule4FBE0864CustomResourcePolicyD35BFE30",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"CloudWatchLogs\\",\\"action\\":\\"putResourcePolicy\\",\\"parameters\\":{\\"policyName\\":\\"CodePipelineAlarmEventsLogGroupPolicyCodePipelineAlarmPipelineEventsRule4FBE0864184E82F4\\",\\"policyDocument\\":\\"{\\\\\\"Statement\\\\\\":[{\\\\\\"Action\\\\\\":[\\\\\\"logs:PutLogEvents\\\\\\",\\\\\\"logs:CreateLogStream\\\\\\"],\\\\\\"Effect\\\\\\":\\\\\\"Allow\\\\\\",\\\\\\"Principal\\\\\\":{\\\\\\"Service\\\\\\":\\\\\\"events.amazonaws.com\\\\\\"},\\\\\\"Resource\\\\\\":\\\\\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":logs:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":log-group:",
              Object {
                "Ref": "LogGroupName",
              },
              ":*\\\\\\"}],\\\\\\"Version\\\\\\":\\\\\\"2012-10-17\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"EventsLogGroupPolicyCodePipelineAlarmPipelineEventsRule4FBE0864\\"}}",
            ],
          ],
        },
        "Delete": "{\\"service\\":\\"CloudWatchLogs\\",\\"action\\":\\"deleteResourcePolicy\\",\\"parameters\\":{\\"policyName\\":\\"CodePipelineAlarmEventsLogGroupPolicyCodePipelineAlarmPipelineEventsRule4FBE0864184E82F4\\"},\\"ignoreErrorCodesMatching\\":\\"400\\"}",
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"CloudWatchLogs\\",\\"action\\":\\"putResourcePolicy\\",\\"parameters\\":{\\"policyName\\":\\"CodePipelineAlarmEventsLogGroupPolicyCodePipelineAlarmPipelineEventsRule4FBE0864184E82F4\\",\\"policyDocument\\":\\"{\\\\\\"Statement\\\\\\":[{\\\\\\"Action\\\\\\":[\\\\\\"logs:PutLogEvents\\\\\\",\\\\\\"logs:CreateLogStream\\\\\\"],\\\\\\"Effect\\\\\\":\\\\\\"Allow\\\\\\",\\\\\\"Principal\\\\\\":{\\\\\\"Service\\\\\\":\\\\\\"events.amazonaws.com\\\\\\"},\\\\\\"Resource\\\\\\":\\\\\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":logs:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":log-group:",
              Object {
                "Ref": "LogGroupName",
              },
              ":*\\\\\\"}],\\\\\\"Version\\\\\\":\\\\\\"2012-10-17\\\\\\"}\\"},\\"physicalResourceId\\":{\\"id\\":\\"EventsLogGroupPolicyCodePipelineAlarmPipelineEventsRule4FBE0864\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::CloudwatchLogResourcePolicy",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;
